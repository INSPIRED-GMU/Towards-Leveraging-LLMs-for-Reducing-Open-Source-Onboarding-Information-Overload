Contributing to Rust
Thank you for your interest in contributing to Rust! There are many ways to contribute and we appreciate all of them.

The best way to get started is by asking for help in the #new members (link) Zulip stream. We have lots of docs below of how to get started on your own, but the Zulip stream is the best place to ask for help.
Documentation for contributing to Rust is located in the Guide to Rustc Development (link), commonly known as the rustc-dev-guide (link). Despite the name, this guide documents not just how to develop rustc (the Rust compiler), but also how to contribute to the standard library and rustdoc.

About the rustc-dev-guide (link)
The rustc-dev-guide (link) is meant to help document how rustc –the Rust compiler– works, as well as to help new contributors get involved in rustc development. It is recommend to read and understand the rustc-dev-guide (link) before making a contribution. This guide talks about the different bots in the Rust ecosystem, the Rust development tools, bootstrapping, the compiler architecture, source code representation, and more.

Getting help
There are many ways you can get help when you're stuck. Rust has many platforms for this: internals (link), rust-zulip (link), and rust-discord (link). It is recommended to ask for help on the rust-zulip (https://rust-lang.zulipchat.com/), but any of these platforms are a great way to seek help and even find a mentor! You can learn more about asking questions and getting help in the Asking Questions (link) chapter of the rustc-dev-guide (link).

Bug reports
Did a compiler error message tell you to come here? If you want to create an ICE report, refer to this section (link) and open an issue (link).
